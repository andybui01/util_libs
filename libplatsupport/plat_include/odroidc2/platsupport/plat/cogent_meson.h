// This file is generated by Cogent

#ifndef DRIVER_H__
#define DRIVER_H__

#include <platsupport/plat/cogent-defns.h>
#include <platsupport/plat/cogent-endianness.h>

enum {
    LET_TRUE = 1,
} ;
enum {
    LETBANG_TRUE = 1,
} ;
enum tag_t {
    TAG_ENUM_TIMEOUT_TIMEBASE_100_US,
    TAG_ENUM_TIMEOUT_TIMEBASE_10_US,
    TAG_ENUM_TIMEOUT_TIMEBASE_1_MS,
    TAG_ENUM_TIMEOUT_TIMEBASE_1_US,
    TAG_ENUM_TIMESTAMP_TIMEBASE_100_US,
    TAG_ENUM_TIMESTAMP_TIMEBASE_10_US,
    TAG_ENUM_TIMESTAMP_TIMEBASE_1_MS,
    TAG_ENUM_TIMESTAMP_TIMEBASE_1_US,
    TAG_ENUM_TIMESTAMP_TIMEBASE_SYSTEM,
} ;
typedef enum tag_t tag_t;
enum untyped_func_enum {
    FUN_ENUM_initialize,
    FUN_ENUM_meson_get_time,
    FUN_ENUM_meson_set_timeout,
    FUN_ENUM_meson_stop_timer,
    FUN_ENUM_reset_timer_e,
} ;
typedef enum untyped_func_enum untyped_func_enum;
typedef untyped_func_enum t56;
#define FUN_DISP_MACRO_dispatch_t56(a1, a2, a3)\
{\
    {\
        a1 = reset_timer_e(a3);\
    }\
}
typedef untyped_func_enum t57;
#define FUN_DISP_MACRO_dispatch_t57(a1, a2, a3)\
{\
    {\
        switch (a2) {\
            \
          case FUN_ENUM_initialize:\
            {\
                a1 = initialize(a3);\
                break;\
            }\
            \
          default:\
            {\
                a1 = meson_stop_timer(a3);\
                break;\
            }\
        }\
    }\
}
typedef untyped_func_enum t58;
#define FUN_DISP_MACRO_dispatch_t58(a1, a2, a3)\
{\
    {\
        a1 = meson_get_time(a3);\
    }\
}
typedef untyped_func_enum t59;
#define FUN_DISP_MACRO_dispatch_t59(a1, a2, a3)\
{\
    {\
        a1 = meson_set_timeout(a3);\
    }\
}
typedef struct t1 t1;
typedef struct t2 t2;
typedef struct t3 t3;
typedef struct t8 t8;
typedef struct t28 t28;
struct t1 {
    tag_t tag;
    unit_t TIMEOUT_TIMEBASE_100_US;
    unit_t TIMEOUT_TIMEBASE_10_US;
    unit_t TIMEOUT_TIMEBASE_1_MS;
    unit_t TIMEOUT_TIMEBASE_1_US;
} ;
struct t2 {
    tag_t tag;
    unit_t TIMESTAMP_TIMEBASE_100_US;
    unit_t TIMESTAMP_TIMEBASE_10_US;
    unit_t TIMESTAMP_TIMEBASE_1_MS;
    unit_t TIMESTAMP_TIMEBASE_1_US;
    unit_t TIMESTAMP_TIMEBASE_SYSTEM;
} ;
struct t3 {
    unsigned int data[20U];
} ;
struct t8 {
    t3 *regs;
    bool_t disable;
} ;
struct t28 {
    t8 *p1;
    u16 p2;
    bool_t p3;
} ;
static inline t3 *reset_timer_e(t3 *);
static inline t8 *initialize(t8 *);
static inline u64 meson_get_time(t8 *);
static inline t8 *meson_set_timeout(t28);
static inline t8 *meson_stop_timer(t8 *);
static inline t3 *dispatch_t56(untyped_func_enum a2, t3 *a3)
{
    return reset_timer_e(a3);
}
static inline t8 *dispatch_t57(untyped_func_enum a2, t8 *a3)
{
    switch (a2) {

      case FUN_ENUM_initialize:
        return initialize(a3);

      default:
        return meson_stop_timer(a3);
    }
}
static inline u64 dispatch_t58(untyped_func_enum a2, t8 *a3)
{
    return meson_get_time(a3);
}
static inline t8 *dispatch_t59(untyped_func_enum a2, t28 a3)
{
    return meson_set_timeout(a3);
}
typedef t8 Meson_timer;
typedef t3 Meson_timer_reg;
typedef t1 Timeout_timebase;
typedef t2 Timestamp_timebase;
typedef t8 *initialize_arg;
typedef t8 *initialize_ret;
typedef t8 *meson_get_time_arg;
typedef u64 meson_get_time_ret;
typedef t28 meson_set_timeout_arg;
typedef t8 *meson_set_timeout_ret;
typedef t8 *meson_stop_timer_arg;
typedef t8 *meson_stop_timer_ret;
typedef t3 *reset_timer_e_arg;
typedef t3 *reset_timer_e_ret;
#endif
